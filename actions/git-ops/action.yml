name: Generate a new GitOps release.
outputs:
  app-name:
    value: ${{ steps.original-app-info.outputs.app_name }}
  initial-version:
    value: ${{ steps.original-app-info.outputs.app_version }}
  final-version:
    value: ${{ steps.new-app-info.outputs.app_version || steps.original-app-info.outputs.app_version }}
runs:
  using: "composite"
  steps:
    - run: git config user.email '${{ github.repository }}+github-actions[bot]@users.noreply.github.com'
      shell: bash
    - run: git config user.name 'github-actions'
      shell: bash
    - run: mix git_ops.project_info --format github-actions
      name: Retrieving original app version.
      id: original-app-info
      shell: bash
    - run: mix git_ops.release --yes || true
      shell: bash
    - run: mix git_ops.project_info --format github-actions
      name: Checking for new app version.
      id: new-app-info
      shell: bash
    - name: Pushing new tag
      if: ${{ steps.original-app-info.outputs.app_version != steps.new-app-info.outputs.app_version }}
      run: git push "https://${{ github.actor }}:${{ github.token }}@github.com/${{ github.repository }}" HEAD:${{ github.ref }} refs/tags/v${{ steps.new-app-info.outputs.app_version }}
      shell: bash
    - name: Creating new Github release
      if: ${{ steps.original-app-info.outputs.app_version != steps.new-app-info.outputs.app_version }}
      id: create-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        tag_name: v${{ steps.new-app-info.outputs.app_version }}
        release_name: Release ${{ steps.new-app-info.outputs.app_name }} ${{ steps.new-app-info.outputs.app_version }}
        body: Autogenerated by git_ops release.
